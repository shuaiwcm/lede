name: OpenWrt-CI

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release tag for the firmware"
        required: true
        default: "v1.0.0"

permissions:
  contents: read

jobs:

  build_openwrt:

    name: Build OpenWrt Firmware

    runs-on: ubuntu-22.04

    steps:
      - name: Space cleanup and Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -E rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-mark hold grub-efi-amd64-signed
          sudo -E apt update
          sudo -E apt -y purge azure-cli* docker* ghc* zulu* llvm* firefox google* dotnet* powershell* openjdk* mysql* php* mongodb* dotnet* snap*
          sudo -E apt -y full-upgrade
          sudo -E apt -y install ack antlr3 aria2 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E systemctl daemon-reload
          sudo -E apt -y autoremove --purge
          sudo -E apt clean
          sudo -E timedatectl set-timezone "Asia/Shanghai"

      - name: Checkout OpenWrt
        uses: actions/checkout@v4

      - name: Update feeds
        run: |
          echo 'src-git OpenClash https://github.com/vernesong/OpenClash.git;master' >>feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config

          # ========================固件定制部分========================
          #
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          #
          cat >> .config <<EOF
          CONFIG_TARGET_ipq806x=y
          CONFIG_TARGET_ipq806x_generic=y
          CONFIG_TARGET_ipq806x_generic_DEVICE_linksys_ea8500=y
          CONFIG_ARIA2_BITTORRENT=y
          CONFIG_ARIA2_NOXML=y
          CONFIG_ARIA2_OPENSSL=y
          CONFIG_ARIA2_WEBSOCKET=y
          CONFIG_PACKAGE_6in4=y
          CONFIG_PACKAGE_alist=m
          CONFIG_PACKAGE_aria2=m
          CONFIG_PACKAGE_bash=y
          CONFIG_PACKAGE_coreutils=y
          CONFIG_PACKAGE_coreutils-nohup=y
          # CONFIG_PACKAGE_firewall is not set
          CONFIG_PACKAGE_firewall4=y
          CONFIG_PACKAGE_frpc=y
          CONFIG_PACKAGE_fuse-utils=y
          # CONFIG_PACKAGE_iptables-mod-conntrack-extra is not set
          # CONFIG_PACKAGE_iptables-mod-fullconenat is not set
          CONFIG_PACKAGE_ipv6helper=y
          CONFIG_PACKAGE_jansson=y
          CONFIG_PACKAGE_kmod-fuse=y
          CONFIG_PACKAGE_kmod-inet-diag=y
          # CONFIG_PACKAGE_kmod-ipt-conntrack-extra is not set
          # CONFIG_PACKAGE_kmod-ipt-fullconenat is not set
          CONFIG_PACKAGE_kmod-iptunnel=y
          CONFIG_PACKAGE_kmod-iptunnel4=y
          CONFIG_PACKAGE_kmod-lib-crc32c=y
          # CONFIG_PACKAGE_kmod-nf-conntrack-netlink is not set
          CONFIG_PACKAGE_kmod-nft-core=y
          CONFIG_PACKAGE_kmod-nft-fib=y
          CONFIG_PACKAGE_kmod-nft-nat=y
          CONFIG_PACKAGE_kmod-nft-offload=y
          CONFIG_PACKAGE_kmod-nft-tproxy=y
          CONFIG_PACKAGE_kmod-sit=y
          CONFIG_PACKAGE_libcap=y
          CONFIG_PACKAGE_libcap-bin=y
          CONFIG_PACKAGE_libcap-bin-capsh-shell="/bin/sh"
          CONFIG_PACKAGE_libfuse=m
          CONFIG_PACKAGE_libgmp=y
          CONFIG_PACKAGE_libminiupnpc=y
          CONFIG_PACKAGE_libnatpmp=y
          CONFIG_PACKAGE_libnftnl=y
          CONFIG_PACKAGE_libreadline=y
          CONFIG_PACKAGE_libruby=y
          CONFIG_PACKAGE_libstdcpp=y
          CONFIG_PACKAGE_libyaml=y
          CONFIG_PACKAGE_luci-app-accesscontrol=m
          CONFIG_PACKAGE_luci-app-alist=m
          CONFIG_PACKAGE_luci-app-aria2=m
          # CONFIG_PACKAGE_luci-app-ddns is not set
          # CONFIG_PACKAGE_luci-app-filetransfer is not set
          CONFIG_PACKAGE_luci-app-frpc=y
          CONFIG_PACKAGE_luci-app-lucky=y
          # CONFIG_PACKAGE_luci-app-nlbwmon is not set
          CONFIG_PACKAGE_luci-app-openclash=y
          CONFIG_PACKAGE_luci-app-timecontrol=y
          # CONFIG_PACKAGE_luci-app-vlmcsd is not set
          # CONFIG_PACKAGE_luci-app-vsftpd is not set
          CONFIG_PACKAGE_luci-app-zerotier=y
          CONFIG_PACKAGE_luci-i18n-accesscontrol-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-alist-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-aria2-zh-cn=m
          CONFIG_PACKAGE_luci-i18n-frpc-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-lucky-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-timecontrol-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-zerotier-zh-cn=y
          # CONFIG_PACKAGE_luci-lib-fs is not set
          CONFIG_PACKAGE_lucky=y
          CONFIG_PACKAGE_nftables-json=y
          CONFIG_PACKAGE_nftables-nojson=m
          # CONFIG_PACKAGE_nlbwmon is not set
          CONFIG_PACKAGE_ruby=y
          CONFIG_PACKAGE_ruby-bigdecimal=y
          CONFIG_PACKAGE_ruby-date=y
          CONFIG_PACKAGE_ruby-digest=y
          CONFIG_PACKAGE_ruby-enc=y
          CONFIG_PACKAGE_ruby-forwardable=y
          CONFIG_PACKAGE_ruby-pstore=y
          CONFIG_PACKAGE_ruby-psych=y
          CONFIG_PACKAGE_ruby-stringio=y
          CONFIG_PACKAGE_ruby-strscan=y
          CONFIG_PACKAGE_ruby-yaml=y
          CONFIG_PACKAGE_unzip=y
          # CONFIG_PACKAGE_vlmcsd is not set
          # CONFIG_PACKAGE_vsftpd-alt is not set
          CONFIG_PACKAGE_zerotier=y
          EOF

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig
          # 网络配置信息，将从 zzz-default-settings 文件的第2行开始添加
          sed -i "2i # network config" ./package/lean/default-settings/files/zzz-default-settings
          sed -i "3i uci set network.lan.ipaddr='192.168.50.1'" ./package/lean/default-settings/files/zzz-default-settings #登陆地址
          sed -i "4i uci set network.lan.proto='static'" ./package/lean/default-settings/files/zzz-default-settings # 静态 IP
          
      - name: Download packages
        run: make download -j16

      - name: Compile firmware
        run: |
          make -j$(nproc) || make -j1 V=s

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f -name "*.bin") ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Upload buildinfo
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Upload firmware
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_firmware
          path: ./artifact/firmware/
      
      - name: Upload package
        uses: actions/upload-artifact@v4
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: 设置 Release 名称
        if: github.event_name == 'workflow_dispatch'
        run: |
          # 获取当前的日期并格式化为 "年.月.日-时分" 格式
          release_name="OpenWrt Firmware Build for ${{ github.event.inputs.tag }} - $(date +'%Y.%m.%d-%H%M')"
          # 将生成的 release_name 保存到 GitHub 环境变量中，供后续步骤使用
          echo "release_name=$release_name" >> $GITHUB_ENV
      
      - name: 上传 Release 资源
        if: github.event_name == 'workflow_dispatch'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*.bin
          tag: ${{ github.event.inputs.tag }}
          release_name: ${{ env.release_name }}
          file_glob: true
